#include <iostream>
using namespace std;

//Comments

int main(){





return 0;
}


relational expressions.
==
!=

var types
{
  int
  double
  char
  bool
  float
  void
  wchar_t
}

With rand include <cstdlib>


functions {

  functions only have 1 return

  function declaration is at top
  int myFunction( int a);

  function definition
  int myFunction( int a){
    return int;}

  can have void functions

}

Address space{
  can find variables Address
  use & to find address
  0x ~ hexadecimal 0-15
  pass by reference parameter
  call by reference
    void foo( int &x );
    & makes it pass address instead of var value.
  caller's data can be modified now the function can use main scope variables.

}


Arrays{
  Pass by reference default
  passes address of first value

}

String{
  string is a class
  declaration is called insancheating.
  can index into string to get char

}

FileIO{
  #include<fstream>
  first declare ifstream
  ifstream inputStream;
  connect to a file in the current directory.
  inputStream.open("filename.txt");
  channel stream same as cin/cout >>, <<
  end with inputStream.close();
  getline() to set custom delimiters.

  Failsafe for missing files,
  if(!inStream.is_open()){
    exit(-1);
  }
}

Structs{
  defined With
  struct StruName{
  bool sex;
  bool neutered;
  };
  just list variable definition
  define like normal variable
  StruName person__0;
  person__1.sex = true;
}

Classes{
  
}
